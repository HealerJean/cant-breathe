<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.hlj.maven</groupId>
  <artifactId>healer-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  
 <!-- 14 、实现父类UTF-8 -->	  
  	<url>http://maven.apache.org</url>
    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	
 <!-- 13 、实现聚合 -->	
  		<!-- 导入了三个模块，把这三个模块聚合在一起了 -->
	<modules> 
		<!-- 聚合是模块的位置 -->
		<module>../healer-core</module>
		<module>../healer-log</module>
		<module>../healer-service</module>
	</modules>
  
  
  
  	<dependencyManagement>
  			<dependencies>
	<!-- 0、junit -->
			<!-- <scope>test</scope> 测试有效-->			
	  			<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<version>4.10</version>
					<scope>test</scope>
				</dependency>
	 <!--1、  hibernate -->
	  			<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-core</artifactId>
					<version>4.1.10.Final</version>
				</dependency>
				
	<!-- 2、   mysql  效-->
			<!-- <scope>runtime</scope> 运行有效-->			
	  			<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>5.1.24</version>
					<scope>runtime</scope>
				</dependency>
	<!-- 3、log4j	 -->		
				<dependency>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
					<version>1.2.17</version>
				</dependency>
				
	<!-- 4、dbunit -->			
				<dependency>
					<groupId>dbunit</groupId>
					<artifactId>dbunit</artifactId>
					<version>2.2</version>
				</dependency>
	<!-- 				
	5、junit 已存在
	  			<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<version>4.10</version>
					<scope>test</scope>
				</dependency> -->
	<!-- 6、commons-logging -->
				
				<dependency>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
					<version>1.1.1</version>
				</dependency>
	<!--
	  7、log4j 已经存在
				
				<dependency>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
					<version>1.2.17</version>
				</dependency> -->
				
	<!-- 9、healer-core -->	  
			
		    <dependency>
				<groupId>com.hlj.maven</groupId>
				<artifactId>healer-core</artifactId>
				<version>0.0.1-SNAPSHOT</version>			
			</dependency>
		
	<!-- 10、healer-log 使用下面的变量不能够跳过去-->	  		 
			<dependency> 
				<groupId>${project.groupId}</groupId>
				<artifactId>healer-log</artifactId>
				<version>${project.version}</version>			
			<!-- 12 、排除依赖 exclusions-->	  			
				<exclusions>
						<!-- 可以排除依赖 -->
						<exclusion>
							<groupId>commons-logging</groupId>
							<artifactId>commons-logging</artifactId>
						</exclusion>
				</exclusions>	
			</dependency>
		<!-- 11、easymock -->	  		 
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>3.1</version>
				<scope>test</scope>
			</dependency>
			

			 
		  </dependencies>
  	</dependencyManagement>
  
  
<!--    <repositories> 
   
   下面这个将来为了开发中能够依靠不用的开发环境而使用不同的url 地址（localhost会变化）仓库，
                     为了不更改代码，所以配置到了maven的 server.xml的配置文件中去了
   		<repository> 
   			<id>nexus</id> 
   			<name>Nexus Repository</name> 
	18、如果从中央工厂下载，不全所以才有下面这个	http://localhost:8081/nexus/content/repositories/central/
			<url>http://localhost:8081/nexus/content/groups/public/</url> 
			<releases>  releases 默认是开启的，这里true即可
				<enabled>true</enabled> 
		    </releases> 
		    <snapshots>  snapshots默认是关闭的，需要手动开启
				<enabled>true</enabled> 
			</snapshots> 
		</repository> 
	</repositories>  -->
  
<!--   
	19、发布工厂，系统提供的 id和name都是自己起的
	<distributionManagement>
		<repository>
			<id>healer-release</id>
			<name>healer release resp</name>
			<url>http://localhost:8081/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>healer-snapshots</id>
			<name>healer snapshots resp</name>
			<url>http://localhost:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
   -->
 
    <!-- 	20、发布到自己建立的工厂  -->
   <distributionManagement>
		<repository>
			<id>healer-release</id>
			<name>healer-snapshots reposirory</name>
			<url>http://localhost:8081/nexus/content/repositories/healer-releases/</url>
		</repository>
		<snapshotRepository>
			<id>healer-snapshots</id>
			<name>healer-snapshots reposirory</name>
			<url>http://localhost:8081/nexus/content/repositories/healer-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
  
 
  
</project>